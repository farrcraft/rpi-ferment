// Generated by CoffeeScript 1.6.2
(function() {
  var Thermometer, fs,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  fs = require('fs');

  Thermometer = (function() {
    function Thermometer() {
      this.temperature = __bind(this.temperature, this);
      this.raw = __bind(this.raw, this);
      this.sensors = __bind(this.sensors, this);
    }

    Thermometer.prototype.basePath_ = '/sys/bus/w1/devices/';

    Thermometer.prototype.deviceFile_ = '/w1_slave';

    Thermometer.prototype.unit_ = 'celsius';

    Thermometer.prototype.sensors = function() {
      var entry, files, ids, pos, _i, _len;

      files = fs.readDirSync(this.basePath_);
      ids = [];
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        entry = files[_i];
        pos = entry.indexOf('28-');
        if (pos !== -1) {
          ids.push(entry.substr(pos + 3));
        }
      }
      return ids;
    };

    Thermometer.prototype.raw = function(sensorId) {
      var data, filename, lines;

      filename = this.basePath_ + '28-' + sensorId + this.deviceFile_;
      data = fs.readFileSync(filename);
      lines = data.split('\n');
      return lines;
    };

    Thermometer.prototype.temperature = function(sensorId) {
      var lines, pos, rawTemp, reading, temp;

      reading = false;
      while (!reading) {
        lines = this.raw(sensorId);
        if (lines[0].slice(lines[0].length - 4) === 'YES') {
          reading = true;
        }
      }
      pos = lines[1].indexOf('t=');
      if (pos !== -1) {
        rawTemp = parseFloat(lines[1].substr(pos + 2));
        temp = rawTemp / 1000.0;
        if (this.unit_ === 'farenheight') {
          temp = temp * 9.0 / 5.0 + 32.0;
        }
        return temp;
        return null;
      }
    };

    return Thermometer;

  })();

  module.exports = Thermometer;

}).call(this);
