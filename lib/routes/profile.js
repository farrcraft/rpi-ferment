// Generated by CoffeeScript 1.6.2
(function() {
  var mongoose;

  mongoose = require('mongoose');

  require('../orm/profile.js');

  module.exports.routes = function(app) {
    app.get('/profiles', function(req, res) {
      var findCallback, model;

      model = mongoose.model('Profile');
      findCallback = function(err, profiles) {
        if (!err) {
          return res.send(profiles);
        }
      };
      model.find(findCallback);
    });
    app.get('/profiles/:id', function(req, res) {
      var model;

      model = mongoose.model('Profile');
      model.findById(req.params.id, function(err, profile) {
        return res.send(profile);
      });
    });
    app.post('/profiles', function(req, res) {
      var model, profile, saveCallback;

      model = mongoose.model('Profile');
      profile = new model();
      profile.name = req.body.name;
      profile.control_mode = req.body.control_mode;
      profile.sensor = req.body.sensor;
      profile.steps = req.body.steps;
      profile.active = req.body.active;
      profile.overrides = req.body.overrides;
      saveCallback = function(err) {};
      profile.save(saveCallback);
      return res.send(profile);
    });
    app["delete"]('/profiles/:id', function(req, res) {
      var model;

      model = mongoose.model('Profile');
      console.log('deleting profile ' + req.params.id);
      return model.findByIdAndRemove(req.params.id, function(err, profile) {
        if (!err) {
          return res.send(profile);
        }
      });
    });
    app.put('/profiles/:id', function(req, res) {
      var model;

      model = mongoose.model('Profile');
      return model.findById(req.params.id, function(err, profile) {
        var controller, oldId, oldState;

        profile.name = req.body.name;
        profile.control_mode = req.body.control_mode;
        profile.sensor = req.body.sensor;
        profile.steps = req.body.steps;
        oldState = profile.active;
        profile.active = req.body.active;
        profile.overrides = req.body.overrides;
        controller = app.get('controller');
        oldId = null;
        if (controller.state_[profile.sensor].profile !== null) {
          oldId = controller.state_[profile.sensor].profile._id;
        }
        if (oldId !== profile._id && profile.active === true) {
          profile.start_time = new Date();
          controller.state_[profile.sensor].profile = profile;
          if (controller.debug_) {
            console.log('Bound new active profile [' + profile.name + '] to sensor [' + profile.sensor + ']');
          }
        } else if (oldId === profile._id && profile.active !== true) {
          controller.state_[profile.sensor].profile = null;
          if (controller.debug_) {
            console.log('Deactivated active profile [' + profile.name + '] on sensor [' + profile.sensor + ']');
          }
        }
        return profile.save(function(err) {
          if (!err) {
            return res.send(profile);
          }
        });
      });
    });
  };

}).call(this);
